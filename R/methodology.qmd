---
title: "Methodology"
author: 
  - Jolyon Miles-Wilson
  - Celestin Okoroji
date: "`r format(Sys.time(), '%e %B %Y')`"
format: 
  html:
    self-contained: true
    code-fold: true
    code-tools: true
    code-summary: "Code"
    toc: true
    toc-depth: 5
execute: 
  echo: false
  warning: false
number-sections: true
---

```{r packages}
library(haven)
library(poLCA)
library(Hmisc)
library(dplyr)
library(ggplot2)
library(tidyr)
library(skimr)
library(kableExtra)
#library(MASS)
library(wesanderson)
library(ggrepel)
library(here)
library(emmeans)
#library(devtools)
#install_version("sjstats", version = "0.18.2")
library(sjstats)
library(readr)
library(sjPlot)
library(nnet)
library(apaTables)
```

```{r palette}
rm(list = ls())
options(scipen = 999)
colours <- wes_palette("GrandBudapest2",4,"discrete")
better_colours <- c('#8dd3c7','#bebada','#fb8072','#80b1d3','#fdb462')
many_colours <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928','#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f')
```

```{r functions}
extract_glm_coefs <- function(mod, only_sig=F, decimal_places = 3){
  coefs <- coef(summary(mod)) 
  if(only_sig==T){
    coefs <- coefs[which(coefs[,4] < .05),]
  }
  coefs <- as_tibble(coefs, rownames="variable") %>% # specify new variable to add rownames to 
    mutate(
    or = round(exp(Estimate), decimal_places), .after=Estimate
    )
}

extract_lm_coefs <- function(mod, only_sig = F){
  coefs <- coef(summary(mod)) 
  if(only_sig==T){
    coefs <- coefs[which(coefs[,4] < .05),]
  }
  coefs <- as_tibble(coefs, rownames="variable") # specify new variable to add rownames to 
}

get_pvalue <- function(model){
  f_value <- summary(model)$fstatistic
  p_value <- pf(f_value['value'], f_value['numdf'], f_value['dendf'], lower.tail = F)
  attributes(p_value) <- NULL
  return(p_value)
}

```

```{r data, output=FALSE}
data <- readRDS("../Data/2025-04-07 - Cleaned_data.rds")

# Specify data to be used in income analysis
income_data <- filter(data, income_drop_all==0)
```

```{r age_stats}
age_statistics <- data %>%
  summarise(
    mean = mean(Age, na.rm=T),
    median = median(Age, na.rm=T),
    min = min(Age,na.rm=T),
    max = max(Age,na.rm=T),
    stdev = sd(Age, na.rm=T),
    wtd_mean = weighted.mean(Age, w = NatRepemployees, na.rm = T),
    wtd_median = wtd.quantile(Age, w = NatRepemployees, probs = c(.5), na.rm = T),
    wtd_min = wtd.quantile(Age, w = NatRepemployees, probs = c(0), na.rm = T),
    wtd_max = wtd.quantile(Age, w = NatRepemployees, probs = c(1), na.rm = T),
    wtd_stdev = sqrt(wtd.var(Age, w = NatRepemployees, na.rm = T)),
    N = n()
  )

readr::write_csv(age_statistics, file = "../outputs/methodology/data/age_stats.csv")

```

```{r gender_stats}
gender_statistics <- data %>%
  group_by(Gender) %>%
  summarise(
    n = n(),
    Frequency = sum(NatRepemployees)
  ) %>%
  mutate(
    N = sum(n),
    Sum = sum(Frequency),
    percentage = 100 * (n / N),
    wtd_percentage = 100 * (Frequency / Sum)
  )

readr::write_csv(gender_statistics, file="../outputs/methodology/data/gender_statistics.csv")
```

```{r ethnicity_stats}
ethnicity_statistics <- data %>%
  group_by(Ethnicity_labelled) %>%
  summarise(
    n = n(), # count cases
    Frequency = sum(NatRepemployees) # count weighted cases
  ) %>%
  mutate(
    N = sum(n),
    Sum = sum(Frequency),
    percentage = 100 * (n / N),
    wtd_percentage = 100 * (Frequency / Sum)
  )

write_csv(ethnicity_statistics, file="../outputs/methodology/data/ethnicity_statistics_census.csv")
```

-   [ ] Add css file to improve styling?

# Participants and Design

\[**Insert Name of Report**\] contains data from two studies. The first of these studies was a nationally representative survey of `r nrow(data)` \[**Workers?**\] conducted by Opinium Research between 25th November 2023 and the 21st December 2023.

To achieve a robust estimate of outsourced workers, the sample was weighted by age, gender, and education, region, and ethnicity. The ethnic minority sub-sample (1,435 respondents) was also weighted separately by age, gender, and region to ensure that findings related to ethnic minority adults were fully representative. Targets were estimated using data from the Labour Force Survey, the 2021 Census for England and Wales, and the Northern Ireland Census.

This sample had median age `r age_statistics$median` (SD = `r round(age_statistics$stdev,2)`). `r round(gender_statistics$percentage[which(gender_statistics$Gender == "Female")],0)`% of respondents identified as female, `r round(gender_statistics$percentage[which(gender_statistics$Gender == "Male")],0)`% as male, `r round(gender_statistics$percentage[which(gender_statistics$Gender == "Other")],2)`% as other, and `r round(gender_statistics$percentage[which(gender_statistics$Gender == "Prefer not to say")],2)`% preferred not to identify a gender. `r round(ethnicity_statistics$percentage[which(ethnicity_statistics$Ethnicity_labelled == "English / Welsh / Scottish / Northern Irish / British")],0)`% of respondents identified as 'English / Welsh / Scottish / Northern Irish / British' (see @sec-ethnicity for a detailed breakdown of ethnicity). \[**ADD POTENTIALLY POWER**\]

In a follow-up survey of Outsourced workers (as defined in @sec-study1) conducted by Opinium Research between 19th April to the 16th of May 2024 with a total sample of \[**INSERT SAMPLE**\]. The purpose of this study was to further probe the experiences of outsourced workers and to understand the impact of outsourcing on their work and lives (see @sec-study2).

Soft quotas on age, gender, and region were implemented to ensure broad representativeness, and the final data was weighted to targets based on age, gender, education, region, and ethnicity. The targets were based on the weighted data from study 1. A small proportion of respondents had participated in study 1 and met the outsourced criteria (5%).

ADD INFORMATION ABOUT MEAN AGE, GENDER SPLIT and ETHNIC DIVERSITY AND POTENTIALLY POWER.

Both survey's were administered online.

An initial pilot study aimed to refine the diagnostic questions used to identify outsourced workers, ensuring they aligned with JRF's initial definition and could be accurately answered by survey respondents. The diagnostic questions and feedback follow-ups were run on Opinium’s political omnibus, a nationally and politically representative sample of 2,055 UK adults between 30 August and 1 September 2023. The questions were filtered to those in work, resulting in a total of 1,200 respondents. Data from this pilot study is not reported here.

\[**POTENTIALLY ADD A TABLE HERE WITH CROSSTABS FOR THE TWO SAMPLES OR TABBED VISUALISATIONS**\]

# Measures

## Study 1- Nationally representative survey {#sec-study1}

-   [x] Explain the contents of the survey

The survey covered personal demographics, employment demographics (e.g. occupation, hours worked, pay), and the outsourced diagnostic questions. The main objectives were to ensure an accurate estimate of the size and demographic makeup of the outsourced population, and to analyse the data alongside the Labour Force Survey (LFS). \[**WHAT EXACTLY WAS INTENDED TO BE COMPARABLE?**\]

Comparability to the LFS posed challenges, primarily because the LFS is conducted face-to-face, with interviewers playing a significant role in ensuring the accuracy of data and respondents' understanding of questions. However, as the Transformed Labour Force Survey (TLFS)– an online first version of the survey set to replace the LFS— was underway, where possible we used the TLFS versions. While question wording is still under review, this was deemed the best approach, as some TLFS waves had already taken place and findings on comparability to LFS \[**CITATION**\].

-   [ ] I believe some questions were replicated from national survey's so lets explicate that
-   [x] Discuss the issue of pay calcs (e.g. basic overview and then refer to the section on it)
-   [ ] Discuss the issue of defining outsourcing ((e.g. basic overview and then refer to the section on it))
-   [ ] link to the data dictionary

### Income calculations (\[**perhaps more detailed than necessary in this section**\])

Respondents could choose how they provided information about their income. Firstly, they could choose the payment period for which to express their income from the following options:

-   Annually / per year
-   Monthly
-   Weekly
-   Hourly

Secondly, they could choose either an 'open' form of reporting or a 'closed' form. The open form required respondents to type in their pay for the payment period they chose. The closed form required respondents to select which income bracket their pay belonged to from a list of options.

The annual options were:

```{r}
ops <- levels(data$INCOME_CLOSED_ANNUAL_labelled)
```

`r paste0("- ", ops, collapse = "\n")`

The monthly options were:

```{r}
ops <- levels(data$INCOME_CLOSED_MONTHLY_labelled)
```

`r paste0("- ", ops, collapse = "\n")`

The weekly options were:

```{r}
ops <- levels(data$INCOME_CLOSED_WEEKLY_labelled)
```

`r paste0("- ", ops, collapse = "\n")`

The hourly options were:

```{r}
ops <- levels(data$INCOME_CLOSED_HOURLY_labelled)
```

`r paste0("- ", ops, collapse = "\n")`

```{r}
data_subset <- data %>%
  dplyr::select(c(ID, contains("INCOME", ignore.case = F))) %>%
  dplyr::select(!ends_with("labelled") & !ends_with("FREQ") & !ends_with("2"))

number_open <- data_subset %>%
  filter(!is.na(INCOME_OPEN_1)) %>%
  nrow()

number_closed <- data_subset %>%
  filter(is.na(INCOME_OPEN_1)) %>%
  dplyr::select(c(ID, contains("CLOSED"))) %>%
  nrow()

# but also check how many "prefer not to say"
closed_income <- data %>%
  filter(is.na(INCOME_OPEN_1)) %>%
  dplyr::select(c(ID, contains("INCOME", ignore.case = F))) %>%
  dplyr::select(ends_with("labelled"))

pref_not_say <- closed_income %>%
  rowwise() %>%
  summarise(
    sum = sum(c_across(everything()) == "Prefer not to say", na.rm=TRUE)
  ) %>%
  summarise(
    total_not_answered = sum(sum)
  )

closed_answered <- number_closed - pref_not_say$total_not_answered

```

`r number_open` respondents answered using the open method. `r closed_answered` respondents answered using the closed method. `r nrow(data) - sum(number_open,closed_answered)` did not answer either.

We equivalised respondents' income across the reporting options in two steps. Firstly, we converted closed income responses to continuous numeric values by taking the midpoint of the income brackets, or the value of the "less than" and "over" values. For example, a closed response of "£5,600 up to £11,200" would be converted to £8400; and a closed response of "Less than £5,600 a year" would be converted to £5600. These converted closed responses were combined with the open responses to produce a single continous income variable across payment periods.

```{r}
weeks_in_year <- 365 / 7 # if we're being pedantic (this is 52.14 weeks)
min_holiday_entitlement <- 28
non_working_weeks <- min_holiday_entitlement/5
working_weeks <- weeks_in_year - non_working_weeks
```

Next, we expressed all respondents' income in annual, weekly, and hourly periods. To do this we made an assumption about the number of working weeks in a year based on the minimum holiday entitlement of 28 days. We calculated the total number of weeks in a year as 365 / 7 = `r round(weeks_in_year,2)`, the total number of non-working weeks as 28 / 5 = `r round(non_working_weeks,2)`, and thus the total number of working weeks as `r round(weeks_in_year,2)` - `r round(non_working_weeks,2)` = `r round(working_weeks,2)`.

With this figure and the number of hours worked per week, we could convert incomes provided in one payment period to another. The table below shows how this was achieved.

```{r}
conversion_table <- data.frame("Income provided..." = 
                                 c("... annually",
                                   "... monthly",
                                   "... weekly",
                                   "... hourly"),
                               "Formula to convert to annual" = 
                                 c("= income",
                                   "= income x 12",
                                   "= income x working weeks",
                                   "= income x hours per week x working weeks "),
                               "Formula to convert to weekly" = 
                                 c("= income / working weeks",
                                   "= (income x 12) / working weeks",
                                   "= income",
                                   "= income x hours per week"),
                               "Formula to convert to hourly" = 
                                 c("= weekly income / hours worked per week",
                                   "= weekly income / hours worked per week",
                                   "= weekly income / hours worked per week",
                                   "= weekly income / hours worked per week"))

conversion_table %>%
  kable(col.names = c(
    "Income provided...", 
    "Formula to convert to annual",
    "Formula to convert to weekly",
    "Formula to convert to hourly")) %>%
  kable_styling(full_width = T)
```

## Study 2 - Outsourced workers survey {#sec-study2}

-   [ ] Explain the contents of the survey and how the focus differences from the first study
-   [ ] Outline the key areas e.g. Rights Violations etc
-   [ ] If there is any variable that is constructed then refer to it here briefly with a more verbose explanation in the relevant section
-   [ ] Link to data dictionary

# Analysis - Study 1

-   [x] Determining if the worker is outsourced
-   [x] Calculating Low/Not Low pay
-   [ ] Explain the analyses (e.g. any models that actually appear in the final output)
    -   [ ] Outsourced workers are paid 2k less and after controls it is 3k

## Defining outsourcing

Workers were defined as outsourced based on responses to a set of diagnostic questions. Three questions asked respondents directly about whether they considered themselves outsourced and/or agency workers.

The first of these questions asked respondents to indicate directly whether they considered themselves outsourced by selecting one of the following options:

1.  I am sure I’m an outsourced worker
2.  I think I might be an outsourced worker
3.  I am not an outsourced worker

The second question asked respondents to indicate whether they considered themselves an agency worker by selecting from three options. For respondents who responded 1 or 2 to question 1, the options were:

1.  I am sure that I’m also an agency worker
2.  I think I might also be an agency worker
3.  I am not an agency worker

For respondents who responded 3 to question 1, the options were:

1.  I am sure that I’m an agency worker
2.  I think I might be an agency worker
3.  I am not an agency worker

Respondents were also asked whether the work they do was long- or short-term by selecting one of:

1.  I’m hired to do work which an organisation needs doing on a long-term or ongoing basis.
2.  I’m hired to do work which an organisation needs doing on a short-term or temporary basis.
3.  Other (please specify)

Finally, respondents were asked about aspects of their work that might indicate that the work they do is outsourced work. Respondents were asked: "Please read each of the following statements and tell us whether or not they are true for you and your work." The statements were:

1.  I am paid by one organisation but I do work for a different organisation.
2.  The organisation I’m paid by is a ‘third party’ organisation which other organisations hire to do work for them, rather than doing that w \[**FIND QUESTION IN DATA DICT**\]
3.  My employer / agency provides people to do work for other organisations (i.e. they might provide people to do cleaning, security, administratio \[**FIND QUESTION IN DATA DICT**\]
4.  On a day-to-day basis, I’m paid by one organisation but I get given tasks or instructions by people who are paid by a different organisation.
5.  I am paid by one organisation, but I work in a space which has the logo or branding of a different organisation.
6.  I wear a uniform which has the logo or branding of my employer / agency, and which marks me out as being paid by a different organisation to so \[**FIND QUESTION IN DATA DICT**\]

Workers were categorised into three mutually exclusive sub groups based on their responses to the above questions.

1.  A respondent was categorised as '**pure outsourced**' if they responded 'I am sure I'm an outsourced worker' or 'I think I might be an outsourced worker' **and** 'I’m hired to do work which an organisation needs doing on a long-term or ongoing basis.'.

2.  A respondent was categorised as '**likely agency**' if they responded 'I am sure that I'm an agency worker' **and** 'I’m hired to do work which an organisation needs doing on a long-term or ongoing basis', **excluding** those people who are already defined as being 'pure outsourced'.

3.  A respondent was categorised as belonging to the '**high indicators**' group if they responded TRUE to five or six of the outsourcing indicators, as well as responding 'I’m hired to do work which an organisation needs doing on a long-term or ongoing basis', **excluding** those people who were already defined as 'pure outsourced' or 'likely agency'.

Together, these three sub groups form the classification of 'outsourced workers' considered in this report. Throughout the report, the term 'outsourced' refers to workers across the three sub groups. In places, analysis considers the three sub groups separately, in which case the groups will be referred to by name as 'pure outsourced', 'likely agency', or 'high indicators'.

## Defining low pay

A 'low pay' binary variable was created by implementing an income threshold below which respondents were considered to be on a relatively low income. In line with with the [Organisation for Economic Co-operation and Development](https://www.oecd.org/en/data/indicators/incidence-of-low-and-high-pay.html), we set the threshold at two-thirds median weekly income. The two-thirds threshold was based on the weekly median income for respondents' region to account for regional variations in earnings. 

Regional weekly median income values were drawn from the [Annual Survey of Hours and Earnings](https://www.ons.gov.uk/employmentandlabourmarket/peopleinwork/earningsandworkinghours/datasets/earningsandhoursworkedukregionbyagegroup) (2023 provisional edition). Respondents whose reported weekly income was less than or equal to two-thirds of the median weekly income in their region were assigned to the 'low pay' group, while those whose reported weekly income was greater than two-thirds of the median weekly income in their region were assigned to the 'not low pay' group.

## Models

In this section we describe the statistical models used in the report. In all models we applied survey weights so that the estimates can be considered representative of employees nationally. 

### Outsourced pay gap

To investigate the pay gap been outsourced and non-outsourced workers we constructed a linear regression model predicting annual and weekly income (in separate models) from outsourcing membership. We included other variables in the model to account for their potential influence on income. The full regression model can be expressed as:

$$
Income = Age + Gender + Education + Ethnicity + Migration + Region + Outsourcing
$$
where

- Income is a continuous numeric variable indicating a the respondent's income (weekly or annual, in different models)
- Age is a continuous numeric variable indicating the respondent's age
- Gender is a categorical variable with three levels: 
  - Female (reference category)
  - Male
  - Other
- Education is a categorical variable indicating whether the respondent has a degree, with three levels:
  - No (reference category)
  - Yes
  - Don't know
- Ethnicity is a categorical variable with eight levels:
  - White British (reference category)
  - Arab/British Arab
  - Asian/Asian British
  - Black/African/Caribbean/Black British
  - Mixed/Multiple ethnic group
  - Other ethnic groupo
  - Prefer not to say
  - White other
- Migration is a categorical variable indicating when the respondent arrived in the UK, with 10 levels:
  - I was born in the UK (reference category)
  - Within the last year
  - Within the last 3 years
  - Within the last 5 years
  - Within the last 10 years
  - Within the last 15 years
  - Within the last 20 years
  - Within the last 30 years
  - More than 30 years ago
  - Prefer not to say
- Region is a categorical variable indicating the respodent's region of residence, with 12 levels:
  - London (reference category)
  - East Midlands
  - East of England
  - North East
  - North West
  - Northern Ireland
  - Scotland
  - South East
  - South West
  - Wales
  - West Midlands
  - Yorkshire and the Humber
- Outsourcing is a categorical variable indicating whether the respondent is outsourced, with two levels:
  - Not outsourced (reference category)
  - Outsourced 


```{r}
#| output: false
#| warning: false
#| message: false

# Annual income
# Intercept only
mod_base <- lm(income_annual_all ~ 1, income_data, weights = NatRepemployees)
# H1
mod_annual <- lm(income_annual_all ~ Age + Gender + Has_Degree + Ethnicity_collapsed + Region + outsourcing_status + BORNUK_labelled, income_data, weights = NatRepemployees)

summary(mod_annual)

# F and p
f_annual <- round(anova(mod_base, mod_annual)[2,"F"],2)
p_annual <- anova(mod_base, mod_annual)[2,"Pr(>F)"]
if(p_annual < .001){
  p_annual = "< .001"
} else{
  p_annual = paste0("= ",round(p_annual,3))
}

# Degrees of freedom
dfs_annual <- as.list(anova(mod_base, mod_annual)[2,c("Df","Res.Df")])
# R2
rsquare_annual <- round(summary(mod_annual)$r.squared,2)

# Weekly income
# Intercept only
mod_base <- lm(income_weekly_all ~ 1, income_data, weights = NatRepemployees)
# H1
mod_weekly <- lm(income_weekly_all ~ Age + Gender + Has_Degree + Ethnicity_collapsed + Region + outsourcing_status + BORNUK_labelled, income_data, weights = NatRepemployees)
summary(mod_weekly)

# F and p
f_weekly <- round(anova(mod_base, mod_weekly)[2,"F"],2)
p_weekly <- anova(mod_base, mod_weekly)[2,"Pr(>F)"]
if(p_weekly < .001){
  p_weekly = "< .001"
} else{
  p_weekly = paste0("= ",round(p_weekly,3))
}

# Degrees of freedom
dfs_weekly <- as.list(anova(mod_base, mod_weekly)[2,c("Df","Res.Df")])
# R2
rsquare_weekly <- round(summary(mod_weekly)$r.squared,2)

```

The annual income model was statistically significant (*R^2^* = `r rsquare_annual`, *F*(`r dfs_annual[[1]]`, `r dfs_annual[[2]]`) = `r f_annual`, *p* `r p_annual`). The table below shows the coefficients for the annual income model.

```{r}
labels <- c(
  'Intercept',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Ethnicity: Arab/British Arab',
  'Ethnicity: Asian/Asian British',
  'Ethnicity: Black/African/Caribbean/Black British',
  'Ethnicity: Mixed/Multiple ethnic group',
  'Ethnicity: Other ethnic group',
  'Ethnicity: Prefer not to say',
  'Ethnicity: White other',
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Outsourcing: Outsourced',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say'
)
  
tab_model(mod_annual, pred.labels = labels, dv.labels = "Annual income")
```

As expected, the model statistics for weekly income model were identical to the those of the annual income model. The model was statistically significant (*R^2^* = `r rsquare_weekly`, *F*(`r dfs_weekly[[1]]`, `r dfs_weekly[[2]]`) = `r f_weekly`, *p* `r p_weekly`). The table below shows the coefficients for the weekly income model.

```{r}
tab_model(mod_weekly, pred.labels = labels, dv.labels = "Weekly income")
```

### Gender pay gap

```{r}
annual_gender_coef <- extract_lm_coefs(mod_annual, only_sig = T) %>%
  filter(variable == "GenderMale") 

weekly_gender_coef <- extract_lm_coefs(mod_weekly, only_sig = T) %>%
  filter(variable == "GenderMale") 
```

The above model was also used to assess a possible gender pay gap. As shown in the preceding two tables, there is a significant difference in pay between men and women. Annually, men earn £`r annual_gender_coef$Estimate %>% round(2)` more than women. Per week, men earn £`r weekly_gender_coef$Estimate %>% round(2)` more than women.

We next explored whether outsourcing compounds this gender pay gap by adding an interaction term into the previous models so that 

$$
Income = Age + Gender + Education + Ethnicity + Migration + Region + Outsourcing + Gender:Outsourcing
$$
```{r}
#| output: false
#| warning: false
#| message: false
# Annual income

# H1
mod_annual_int <- lm(income_annual_all ~ Age + Gender + Has_Degree + Ethnicity_collapsed + Region + outsourcing_status + BORNUK_labelled + Gender:outsourcing_status, income_data, weights = NatRepemployees)

summary(mod_annual_int)

# F and p
anova_test <- anova(mod_annual, mod_annual_int)
f_annual <- anova_test[2,"F"] %>% round(2)
p_annual <- anova_test[2,"Pr(>F)"]
if(p_annual < .001){
  p_annual = "< .001"
} else{
  p_annual = paste0("= ",round(p_annual,3))
}

# Degrees of freedom
dfs_annual <- as.list(anova_test[2,c("Df","Res.Df")])
# R2
rsquare_annual <- round(summary(mod_annual_int)$r.squared,2)

# Weekly income

# H1
mod_weekly_int <- lm(income_weekly_all ~ Age + Gender + Has_Degree + Ethnicity_collapsed + Region + outsourcing_status + BORNUK_labelled + Gender:outsourcing_status, income_data, weights = NatRepemployees)
summary(mod_weekly_int)

# F and p
anova_test <- anova(mod_weekly, mod_weekly_int)

f_weekly <-  anova_test[2,"F"] %>% round(2)
p_weekly <- anova_test[2,"Pr(>F)"]
if(p_weekly < .001){
  p_weekly = "< .001"
} else{
  p_weekly = paste0("= ", round(p_weekly,3))
}

# Degrees of freedom
dfs_weekly <- as.list(anova_test[2,c("Df","Res.Df")])
# R2
rsquare_weekly <- round(summary(mod_weekly_int)$r.squared,2)

```

For both models, adding the interaction effect did not improve model fit (*R^2^* = `r rsquare_weekly`, *F*(`r dfs_weekly[[1]]`, `r dfs_weekly[[2]]`) = `r f_weekly`, *p* `r p_weekly`). The tables below show the coefficients for each model.

```{r}
labels <- c(
  'Intercept',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Ethnicity: Arab/British Arab',
  'Ethnicity: Asian/Asian British',
  'Ethnicity: Black/African/Caribbean/Black British',
  'Ethnicity: Mixed/Multiple ethnic group',
  'Ethnicity: Other ethnic group',
  'Ethnicity: Prefer not to say',
  'Ethnicity: White other',
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Outsourcing: Outsourced',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say',
  'Interaction: Outsourcing x Gender Male',
  'Interaction: Outsourcing x Gender Other',
  'Interaction: Outsourcing x Gender Prefer not to say'
)
  
tab_model(mod_annual_int, pred.labels = labels, dv.labels = "Annual income")
tab_model(mod_weekly_int, pred.labels = labels, dv.labels = "Weekly income")

```

The plot below illustrate the main effect that men are paid more than women, outsourced men and women are paid less than non-outsourced men and women, and that the difference in pay between men and women is not significantly different for outsourced people compared to non-outsourced people.

```{r}
sjPlot::plot_model(mod_annual_int, type = "pred", legend.title="", terms = c("outsourcing_status","Gender"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```

### Demographic models

#### Ethnicity

Several regressions were run to assess the likelihood of being outsourced from demographics. These models underlie the claims in the report in relation to ethnicity, migration, and gender.

The overall model was defined as: 

$$
Outsourcing = Ethnicity + Age + Gender + Education + Region + Migration
$$

where

- Outsourcing is a categorical variable indicating whether the respondent is outsourced, with two levels:
  - Not outsourced (reference category)
  - Outsourced
- Age is a continuous numeric variable indicating the respondent's age
- Gender is a categorical variable with three levels: 
  - Female (reference category)
  - Male
  - Other
- Education is a categorical variable indicating whether the respondent has a degree, with three levels:
  - No (reference category)
  - Yes
  - Don't know
- Migration is a categorical variable indicating when the respondent arrived in the UK, with 10 levels:
  - I was born in the UK (reference category)
  - Within the last year
  - Within the last 3 years
  - Within the last 5 years
  - Within the last 10 years
  - Within the last 15 years
  - Within the last 20 years
  - Within the last 30 years
  - More than 30 years ago
  - Prefer not to say
- Region is a categorical variable indicating the respodent's region of residence, with 12 levels:
  - London (reference category)
  - East Midlands
  - East of England
  - North East
  - North West
  - Northern Ireland
  - Scotland
  - South East
  - South West
  - Wales
  - West Midlands
  - Yorkshire and the Humber

For this exploration we modelled ethnicity in three ways.

1. As a categorical variable with two levels:
    - White British (reference category)
    - Not White British
    
2. As a categorical variable with eight levels:
    - White British (reference category)
    - Arab/British Arab
    - Asian/Asian British
    - Black/African/Caribbean/Black British
    - Mixed/Multiple ethnic group
    - Other ethnic groupo
    - Prefer not to say
    - White other
    
3. As a categorical variable with 21 levels:
    - English/Welsh/Scottish/Northern Irish/British (reference category)
    - Irish
    - Gypsy or Irish Traveller
    - Roma
    - Any other White background
    - White and Black Caribbean
    - White and Black African
    - White and Asian
    - Any other Mixed/Multiple ethnic background
    - Indian
    - Pakistani
    - Bangladeshi
    - Chinese
    - Any other Asian background
    - African
    - Caribbean
    - Any other Black, Black British, or Caribbean background
    - Arab
    - Any other ethnic group
    - Don't think of myself as any of these
    - Prefer not to say

All models were run with a quasibinomial distribution to account for the survey weights. Because quasibinomial models don't involve likelihoods, model fit could not be determined using information criteria. Instead, we use Tjur's pseudo *R^2^* to appraise model fit. This approach uses predicted probabilities from the model to calculate the average predicted probability for each level of the outcome variable, then takes the difference in this average between the two levels. The result is a figure between 0 and 1 that estimates how different the average predicted probability in the outsourced group is from the average predicted probability in the not outsourced group. Values closer to 1 indicate the averages are more different and therefore that the model is more accurate in discriminating between the two groups.

```{r ethnicity-binary}
#| output: false
#| warning: false
#| message: false
mod2 <- glm(outsourcing_status ~ Ethnicity_binary + Age + Gender + Has_Degree +  Region + BORNUK_labelled, data, weights = NatRepemployees, family="quasibinomial")

tjur2 <- data %>%
  mutate(pred = predict(mod2, type = "response")) %>%
  group_by(outsourcing_status) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod2, only_sig=T)
ethn_coef <- coefs %>% filter(stringr::str_detect(variable, "Ethnicity"))
```

For model 1, the value of Tjur's pseudo *R^2^* is `r tjur2 %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Ethnicity: Not White',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say'
)

tab_model(mod2, 
          pred.labels = labels, 
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```

```{r ethnicity-aggregated}
#| output: false
#| warning: false
#| message: false
mod <- glm(outsourcing_status ~ Ethnicity_collapsed + Age + Gender + Has_Degree + Region + BORNUK_labelled, data, weights = NatRepemployees, family="quasibinomial")

tjur <- data %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(outsourcing_status) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod, only_sig=T)

ethn_coef <- coefs %>% filter(stringr::str_detect(variable, "Ethnicity"))

```

For model 2, the value of Tjur's pseudo *R^2^* for this model is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Ethnicity: Arab/British Arab',
  'Ethnicity: Asian/Asian British',
  'Ethnicity: Black/African/Caribbean/Black British',
  'Ethnicity: Mixed/Multiple ethnic group',
  'Ethnicity: Other ethnic group',
  'Ethnicity: Prefer not to say',
  'Ethnicity: White other',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say'
)

tab_model(mod, 
          pred.labels = labels, 
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```

```{r ethnicity-disaggregated}
#| output: false
#| warning: false
#| message: false

mod <- glm(outsourcing_status ~ Ethnicity_collapsed_disaggregated + Age + Gender + Has_Degree + Region + BORNUK_labelled, data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

# Test waht amount of variacne the unweighted would explain - similar
# test <- glm(outsourcing_status ~ Ethnicity_collapsed_disaggregated + Age + Gender + Has_Degree + Region + BORNUK_labelled, data, family="binomial")
# with(summary(test), 1 - deviance/null.deviance)


tjur <- data %>%
  filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(outsourcing_status) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod, only_sig=T)

ethn_coef <- coefs %>% filter(stringr::str_detect(variable, "Ethnicity"))

```

For model 3, the value of Tjur's pseudo *R^2^* for this model is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  "Ethnicity: Irish",
  "Ethnicity: Gypsy or Irish Traveller",
  "Ethnicity: Roma",
  "Ethnicity: Any other White background",
  "Ethnicity: White and Black Caribbean",
  "Ethnicity: White and Black African",
  "Ethnicity: White and Asian",
  "Ethnicity: Any other Mixed/Multiple ethnic background",
  "Ethnicity: Indian",
  "Ethnicity: Pakistani",
  "Ethnicity: Bangladeshi",
  "Ethnicity: Chinese",
  "Ethnicity: Any other Asian background",
  "Ethnicity: African",
  "Ethnicity: Caribbean",
  "Ethnicity: Any other Black, Black British, or Caribbean background",
  "Ethnicity: Arab",
  "Ethnicity: Any other ethnic group",
  "Ethnicity: Don't think of myself as any of these",
  "Ethnicity: Prefer not to say",
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say'
)

tab_model(mod, 
          pred.labels = labels, 
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```

#### Migration 

We next focus on predicting whether a person was outsourced based on wehther the person was born in the UK. This binary variable was constructed by collapsing the 10-level migration variable down into two levels, so that "I was born in the UK" becomes "Born in UK", and all levels apart from "I was born in the UK" become "Not born in UK".

```{r migration-binary}
#| output: false
#| warning: false
#| message: false
mod <- glm(outsourcing_status ~ BORNUK_binary + Ethnicity_collapsed_disaggregated + Age + Gender + Has_Degree + Region, data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

tjur <- data %>%
  filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(outsourcing_status) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod, only_sig=T)
```

The value of Tjur's pseudo *R^2^* for this model is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Migration: Not born in the UK',
  "Ethnicity: Irish",
  "Ethnicity: Gypsy or Irish Traveller",
  "Ethnicity: Roma",
  "Ethnicity: Any other White background",
  "Ethnicity: White and Black Caribbean",
  "Ethnicity: White and Black African",
  "Ethnicity: White and Asian",
  "Ethnicity: Any other Mixed/Multiple ethnic background",
  "Ethnicity: Indian",
  "Ethnicity: Pakistani",
  "Ethnicity: Bangladeshi",
  "Ethnicity: Chinese",
  "Ethnicity: Any other Asian background",
  "Ethnicity: African",
  "Ethnicity: Caribbean",
  "Ethnicity: Any other Black, Black British, or Caribbean background",
  "Ethnicity: Arab",
  "Ethnicity: Any other ethnic group",
  "Ethnicity: Don't think of myself as any of these",
  "Ethnicity: Prefer not to say",
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber'
)

tab_model(mod, 
          pred.labels = labels, 
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```
#### Gender

```{r}
gender_coefs <- coefs %>%
  filter(variable == "GenderMale")
```

We used the same generalised linear model as in the previous section to estimate the effect of Gender on outsourcing, where Gender is a categorical variable with four levels:

- Female (reference category)
- Male
- Prefer not to say
- Other

The model indicates that men are `r gender_coefs$or %>% round(2)` times more likely to be outsourced than women.

#### Ethnicity-migration interaction

We next explored whether there was an interaction between ethnicity and migration in predicting outsourcing using generalised linear models by adding an interaction effect to the previous model so that the model formula is:

$$
Outsourcing = Ethnicity + Age + Gender + Educaton + Region + Migration + Ethnicity:Migration
$$

where Ethnicity:Migration represents the interaction term. 

We did this twice: first for the aggregated eight-level ethnicity variable, and then for the disaggregated 21-level variable. 

```{r migration-ethnicity-interaction}
#| output: false
#| warning: false
#| message: false
mod <- glm(outsourcing_status ~ BORNUK_binary * Ethnicity_collapsed + Age + Gender + Has_Degree + Region, data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

tjur <- data %>%
  #filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(outsourcing_status) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod, only_sig=T)

```

For model 1, the value of Tjur's pseudo *R^2^* is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Migration: Not born in the UK',
  'Ethnicity: Arab/British Arab',
  'Ethnicity: Asian/Asian British',
  'Ethnicity: Black/African/Caribbean/Black British',
  'Ethnicity: Mixed/Multiple ethnic group',
  'Ethnicity: Other ethnic group',
  'Ethnicity: Prefer not to say',
  'Ethnicity: White other',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Interaction: Not born in UK x Arab/Arab British',
  'Interaction: Not born in UK x Asian/Asian British',
  'Interaction: Not born in UK x Black/African/Caribbean/Black British',
  'Interaction: Not born in UK x Mixed/Multiple ethnic group',
  'Interaction: Not born in UK x Other ethnic group',
  'Interaction: Not born in UK x Prefer not to say',
  'Interaction: Not born in UK x White other'
  
)

tab_model(mod, 
          pred.labels = labels, 
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```

```{r}
ems <- emmeans(mod, specs = "Ethnicity_collapsed", by = "BORNUK_binary")
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

To explore the interaction we calculated estimated marginal means of the ethnicity x migration effect. Examining the effect of ethnicity within each level of migration, we find that:

1. Among people born in the UK, Asian/Asian British people are `r sig_cons %>% filter(BORNUK_binary == "Born in UK") %>% pull(or) %>% round(2)` times more likely to be outsourced than White British people.
2. Among people not born in the UK, White other workers are `r sig_cons %>% filter(BORNUK_binary == "Not born in UK") %>% filter(contrast == "White British - White other") %>% pull(or) %>% round(2)` as likely to be outsourced than White British people.
3. Among people not born in the UK, White other workers are `r sig_cons %>% filter(BORNUK_binary == "Not born in UK") %>% filter(contrast == "(Black/African/Caribbean/Black British) - White other") %>% pull(or) %>% round(2)` as likely to be outsourced than Black/African/Caribbean/Black British people.
  
The plot below visualises these effects.

```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("BORNUK_binary","Ethnicity_collapsed"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```

```{r}
ems <- emmeans(mod, specs = "BORNUK_binary", by = "Ethnicity_collapsed")
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

Examining the effect of migration for particular ethnicities, we find that:

1. Among White British people, people not born in the UK are `r sig_cons %>% filter(Ethnicity_collapsed == "White British") %>% pull(or) %>% round(2)` more likely to be outsourced than people born in the UK
2. Among people of Mixed/Multiple ethnic group, people not born in the UK are `r sig_cons %>% filter(Ethnicity_collapsed == "Mixed/Multiple ethnic group") %>% pull(or) %>% round(2)` more likely to be outsourced than people born in the UK
3. Among people who preferred not to say their ethnicity, people not born in the UK are `r sig_cons %>% filter(Ethnicity_collapsed == "Prefer not to say") %>% pull(or) %>% round(2)` more likely to be outsourced than people born in the UK

The plot below visualises these effects.

```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("Ethnicity_collapsed","BORNUK_binary"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```

```{r migration-ethnicity_disaggregated-interaction}
#| output: false
#| warning: false
#| message: false
mod <- glm(outsourcing_status ~ BORNUK_binary * Ethnicity_collapsed_disaggregated + Age + Gender + Has_Degree + Region, data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

tjur <- data %>%
  filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(outsourcing_status) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod, only_sig=T)
coefs_all <- extract_glm_coefs(mod)

```

For model 2, the value of Tjur's pseudo *R^2^* is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Migration: Not born in the UK',
  "Ethnicity: Irish",
  "Ethnicity: Gypsy or Irish Traveller",
  "Ethnicity: Roma",
  "Ethnicity: Any other White background",
  "Ethnicity: White and Black Caribbean",
  "Ethnicity: White and Black African",
  "Ethnicity: White and Asian",
  "Ethnicity: Any other Mixed/Multiple ethnic background",
  "Ethnicity: Indian",
  "Ethnicity: Pakistani",
  "Ethnicity: Bangladeshi",
  "Ethnicity: Chinese",
  "Ethnicity: Any other Asian background",
  "Ethnicity: African",
  "Ethnicity: Caribbean",
  "Ethnicity: Any other Black, Black British, or Caribbean background",
  "Ethnicity: Arab",
  "Ethnicity: Any other ethnic group",
  "Ethnicity: Don't think of myself as any of these",
  "Ethnicity: Prefer not to say",
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  "Interaction: Not born in UK x Irish",
  "Interaction: Not born in UK x Gypsy or Irish Traveller",
  # "Interaction: Not born in UK x Roma",
  "Interaction: Not born in UK x Any other White background",
  "Interaction: Not born in UK x White and Black Caribbean",
  "Interaction: Not born in UK x White and Black African",
  "Interaction: Not born in UK x White and Asian",
  "Interaction: Not born in UK x Any other Mixed/Multiple ethnic background",
  "Interaction: Not born in UK x Indian",
  "Interaction: Not born in UK x Pakistani",
  "Interaction: Not born in UK x Bangladeshi",
  "Interaction: Not born in UK x Chinese",
  "Interaction: Not born in UK x Any other Asian background",
  "Interaction: Not born in UK x African",
  "Interaction: Not born in UK x Caribbean",
  "Interaction: Not born in UK x Any other Black, Black British, or Caribbean background",
  "Interaction: Not born in UK x Arab",
  "Interaction: Not born in UK x Any other ethnic group",
  "Interaction: Not born in UK x Don't think of myself as any of these",
  "Interaction: Not born in UK x Prefer not to say"

  
)

tab_model(mod, 
          pred.labels = labels,
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```
```{r}
ems <- emmeans(mod, specs = "Ethnicity_collapsed_disaggregated", by = "BORNUK_binary")
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

Again for this model we calculated estimated marginal means of the ethnicity x migration effect. Examining the effect of ethnicity within each level of migration, we find that:

1. Among people born in the UK, Pakistani workers are `r sig_cons %>% filter(BORNUK_binary == "Born in UK") %>% pull(or) %>% round(2)` times more likely to be outsourced than English/Welsh/Scottish/Northern Irish/British workers.

No other differences were significant. The plot below visualises these effects.

```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("BORNUK_binary","Ethnicity_collapsed_disaggregated"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() +
  theme(
    legend.position = "none"
  )
```
```{r}
ems <- emmeans(mod, specs = "BORNUK_binary", by = "Ethnicity_collapsed_disaggregated")
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

Examining the effect of migration for particular ethnicities, we find that:

1. Among English/Welsh/Scottish/Northern Irish/British workers, people not born in the UK are `r sig_cons %>% filter(Ethnicity_collapsed_disaggregated == "English / Welsh / Scottish / Northern Irish / British") %>% pull(or) %>% round(2)` more likely to be outsourced than people born in the UK
2. Among Mixed White and Asian workers, people not born in the UK are `r sig_cons %>% filter(Ethnicity_collapsed_disaggregated == "White and Asian") %>% pull(or) %>% round(2)` more likely to be outsourced than people born in the UK (**NB n < 50 for this group**).

No other differences were significant. The plot below visualises these findings.

```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("Ethnicity_collapsed_disaggregated","BORNUK_binary"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```

#### Ethnicity-outsourced interaction

A generalised linear model was constructed to test whether the interaction between ethnicity and outsourcing predicted whether a person had a low income. 

$$
Income Group = Outsourcing + Ethnicity + Age + Gender + Education + Region + Migration + Outsourcing:Ethnicity
$$
As in preceding sections, we consturcted three models; one for the binary ethnicity variable, one for the eight-level ethnicity variable, and one for the 21-level ethnicity variable.


```{r}
#| output: false
#| warning: false
#| message: false

mod <- glm(income_group ~ outsourcing_status * Ethnicity_binary + Age + Gender + Has_Degree + Region + BORNUK_labelled, income_data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

tjur <- income_data %>%
  filter(!is.na(income_group)) %>%
  # filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(income_group) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

coefs <- extract_glm_coefs(mod, only_sig = T)
```

The value of Tjur's pseudo *R^2^* for model 1 is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Outsourcing: Outsourced',
  'Ethnicity: Not White',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say',
  'Interaction: Outsourcing x Ethnicity'
)

tab_model(mod, 
          pred.labels = labels,
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```


```{r out-ethn-agg-int}
#| output: false
#| warning: false
#| message: false

mod <- glm(income_group ~ outsourcing_status * Ethnicity_collapsed + Age + Gender + Has_Degree + Region + BORNUK_labelled, income_data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

tjur <- income_data %>%
  filter(!is.na(income_group)) %>%
  # filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(income_group) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

# Test what amount of variance the unweighted model would explain - similar(ish)
# test <- glm(income_group ~ outsourcing_status * Ethnicity_collapsed + Age + Gender + Has_Degree + Region + BORNUK_labelled, income_data, family="binomial")
# summary(test)
# 
# with(summary(test), 1 - deviance/null.deviance)

coefs <- extract_glm_coefs(mod, only_sig = T)
```

The value of Tjur's pseudo *R^2^* for model 2 is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Outsourcing: Outsourced',
  'Ethnicity: Arab/British Arab',
  'Ethnicity: Asian/Asian British',
  'Ethnicity: Black/African/Caribbean/Black British',
  'Ethnicity: Mixed/Multiple ethnic group',
  'Ethnicity: Other ethnic group',
  'Ethnicity: Prefer not to say',
  'Ethnicity: White other',
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say',
  'Interaction: Outsourcing x Arab/British Arab',
  'Interaction: Outsourcing x Asian/Asian British',
  'Interaction: Outsourcing x Black/African/Caribbean/Black British',
  'Interaction: Outsourcing x Mixed/Multiple ethnic group',
  'Interaction: Outsourcing x Other ethnic group',
  'Interaction: Outsourcing x Prefer not to say',
  'Interaction: Outsourcing x White other'
)

tab_model(mod, 
          pred.labels = labels,
          dv.labels = "Outsourcing",
          show.r2 = FALSE)
```

```{r}
ems <- emmeans(mod, specs = "Ethnicity_collapsed", by = "outsourcing_status", nuisance = c("BORNUK_labelled"))
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

To explore the interaction we calculated estimated marginal means of the ethnicity x outsourcing effect. Examining the effect of ethnicity within each level of outsourcing, we find that:

- Among people who are outsourced, people of Mixed/Multiple ethnic group are `r sig_cons %>% pull(or) %>% round(2)` times more likely than Black/African/Caribbean/Black British people to be in the low income group. 

No other significant differences were observed. The plot below visualises this.


```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("outsourcing_status","Ethnicity_collapsed"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```
```{r}
ems <- emmeans(mod, specs = "outsourcing_status", by = "Ethnicity_collapsed", nuisance = c("BORNUK_labelled"))
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

Examining the effect of outsourcing within each ethnicity, we find that:

1. Among White British people, outsourced workers are `r sig_cons %>% filter(Ethnicity_collapsed == "White British") %>% pull(or) %>% round(2)` times more likely to be in the low income group than non-outsourced workers.
2. Among people of Mixed/Multiple ethnic groups, outsourced workers are `r sig_cons %>% filter(Ethnicity_collapsed == "Mixed/Multiple ethnic group") %>% pull(or) %>% round(2)` times more likely to be in the low income group than non-outsourced workers.

For all other ethnicities, there is no significant difference between outsourced and non-outsourced people in the odds of being in the low income group.

The plot below visualises these effects.

```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("Ethnicity_collapsed","outsourcing_status"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```

```{r out-ethn-disagg-int}
#| output: false
#| warning: false
#| message: false

mod <- glm(income_group ~ outsourcing_status * Ethnicity_collapsed_disaggregated + Age + Gender + Has_Degree + Region + BORNUK_labelled, income_data, weights = NatRepemployees, family="quasibinomial")
summary(mod)

tjur <- income_data %>%
  filter(!is.na(income_group)) %>%
  filter(!is.na(Ethnicity_collapsed_disaggregated)) %>%
  mutate(pred = predict(mod, type = "response")) %>%
  group_by(income_group) %>%
  summarise(weighted_mean = weighted.mean(pred, NatRepemployees)) %>%
  summarise(tjur_r2 = diff(weighted_mean)) %>%
  pull()

# Test what amount of variance the unweighted model would explain - similar(ish)
# test <- glm(income_group ~ outsourcing_status * Ethnicity_collapsed + Age + Gender + Has_Degree + Region + BORNUK_labelled, income_data, family="binomial")
# summary(test)
# 
# with(summary(test), 1 - deviance/null.deviance)

coefs <- extract_glm_coefs(mod, only_sig = T)
```

The value of Tjur's pseudo *R^2^* for model 3 is `r tjur %>% round(3)`. The table below shows the model coefficients.

```{r}
labels <- c(
  'Intercept',
  'Outsourcing: Outsourced',
  "Ethnicity: Irish",
  "Ethnicity: Gypsy or Irish Traveller",
  "Ethnicity: Roma",
  "Ethnicity: Any other White background",
  "Ethnicity: White and Black Caribbean",
  "Ethnicity: White and Black African",
  "Ethnicity: White and Asian",
  "Ethnicity: Any other Mixed/Multiple ethnic background",
  "Ethnicity: Indian",
  "Ethnicity: Pakistani",
  "Ethnicity: Bangladeshi",
  "Ethnicity: Chinese",
  "Ethnicity: Any other Asian background",
  "Ethnicity: African",
  "Ethnicity: Caribbean",
  "Ethnicity: Any other Black, Black British, or Caribbean background",
  "Ethnicity: Arab",
  "Ethnicity: Any other ethnic group",
  "Ethnicity: Don't think of myself as any of these",
  "Ethnicity: Prefer not to say",
  'Age',
  'Gender: Male',
  'Gender: Other',
  'Gender: Prefer not to say',
  'Education: Has degree',
  "Education: Don't know",
  'Region: East Midlands',
  'Region: East of England',
  'Region: North East',
  'Region: North West',
  'Region: Northern Ireland',
  'Region: Scotland',
  'Region: South East',
  'Region: South West',
  'Region: Wales',
  'Region: West Midlands',
  'Region: Yorkshire and the Humber',
  'Migration: Arrived within the last year',
  'Migration: Arrived within the last 3 years',
  'Migration: Arrived within the last 5 years',
  'Migration: Arrived within the last 10 years',
  'Migration: Arrived within the last 15 years',
  'Migration: Arrived within the last 20 years',
  'Migration: Arrived within the last 30 years',
  'Migration: Arrived more than 30 years ago',
  'Migration: Prefer not to say',
  "Interaction: Outsourcing x Irish",
  "Interaction: Outsourcing x Gypsy or Irish Traveller",
  "Interaction: Outsourcing x Roma",
  "Interaction: Outsourcing x Any other White background",
  "Interaction: Outsourcing x White and Black Caribbean",
  "Interaction: Outsourcing x White and Black African",
  "Interaction: Outsourcing x White and Asian",
  "Interaction: Outsourcing x Any other Mixed/Multiple ethnic background",
  "Interaction: Outsourcing x Indian",
  "Interaction: Outsourcing x Pakistani",
  "Interaction: Outsourcing x Bangladeshi",
  "Interaction: Outsourcing x Chinese",
  "Interaction: Outsourcing x Any other Asian background",
  "Interaction: Outsourcing x African",
  "Interaction: Outsourcing x Caribbean",
  "Interaction: Outsourcing x Any other Black, Black British, or Caribbean background",
  "Interaction: Outsourcing x Arab",
  "Interaction: Outsourcing x Any other ethnic group",
  "Interaction: Outsourcing x Don't think of myself as any of these",
  "Interaction: Outsourcing x Prefer not to say"
  )

tab_model(mod, 
          pred.labels = labels,
          dv.labels = "Outsourcing",
          show.r2 = FALSE,
          show.ci = FALSE)
```

```{r}
ems <- emmeans(mod, specs = "Ethnicity_collapsed_disaggregated", by = "outsourcing_status", nuisance = c("BORNUK_labelled"))
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

No other significant differences were observed when examining the effect of ethnicity within each level of outsourcing. The plot below visualises this.


```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("outsourcing_status","Ethnicity_collapsed_disaggregated"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() +
  theme(
    legend.position = "none"
  )
```

```{r}
ems <- emmeans(mod, specs = "outsourcing_status", by = "Ethnicity_collapsed_disaggregated", nuisance = c("BORNUK_labelled"))
cons <- summary(contrast(ems, "pairwise",adjust="tukey"))
sig_cons <- cons %>% filter(p.value < .05) %>%
  mutate(
    or = 1 / exp(estimate), .after=estimate # 1 / or because we want to express comparison - white(ref) (contrast expresses white(ref) - comparison)
  )
```

Examining the effect of outsourcing within each ethnicity, we find that:

1. Among White British people, outsourced workers are `r sig_cons %>% filter(Ethnicity_collapsed_disaggregated == "English / Welsh / Scottish / Northern Irish / British") %>% pull(or) %>% round(2)` times more likely to be in the low income group than non-outsourced workers.
2. Among people of Mixed White and Asian ethnicity, outsourced workers are `r sig_cons %>% filter(Ethnicity_collapsed_disaggregated == "White and Asian") %>% pull(or) %>% round(2)` times more likely to be in the low income group than non-outsourced workers (**NB n < 50 for this group**)

For all other ethnicities, there is no significant difference between outsourced and non-outsourced people in the odds of being in the low income group.

The plot below visualises these effects.

```{r}
sjPlot::plot_model(mod, type = "pred", legend.title="", terms = c("Ethnicity_collapsed_disaggregated","outsourcing_status"), dodge=0.5) +#
  
  coord_flip() +
  xlab("") + ylab("Likelihood of being outsourced") +
  theme_minimal() 
```

# Analysis - Study 2

-   [ ] Explain the analyses (e.g. any models that actually appear in the final output)
-   [ ]  For example, when asked to compare their experiences to if they did the same role in-house, 1 in 4 outsourced workers think they are less able to progress; 1 in 5 think it’s harder to assert their rights at work; 1 in 6 think they have less secure hours; and the same proportion feel less invested in their role and in their work, compared to if they were outsourced. 1 in 6 (17%) outsourced workers think they are paid *less* than in-house workers in comparable roles – no sign of a supposed pay premium for this group of workers.
-   [ ] 4 in 10 outsourced workers report having gone without at least one key workplace right or entitlement, such as being paid on time, or paid what they’re entitled to – linking worryingly to the fifth of workers who think it’s harder to assert your rights when you’re outsourced
-   [ ] And most strikingly, a third of all outsourced workers (32%) say they would actively prefer to be in-house if they had a choice, far more than the less than 1 in 5 (18%) who told us they *actively* preferred to be outsourced. This is a significant proportion of outsourced workers who aren’t happy with the status quo.
-   [ ] Stacked (horizontal) bar chart of 'benefits and downsides' question
-   [ ] Percentage of people reporting multiple negative responses
-   [ ] Our findings suggest that just 1 in 10 (10%) outsourced workers have received 4 weeks’ notice as minimum – falling to 1 in 20 (5%) for lower-paid outsourced workers.
-   [ ] Altogether over half (55%) of Black outsourced workers said they’d received less than a week’s notice of their shifts minimum, compared to 4 in 10 (40%) for all outsourced workers, and 36% for White outsourced workers.
-   [ ] 'Pooling harms'

# Limitations and Future Research?

-   [ ] Discuss the limitations of the data and the analysis
-   [ ] If something is really burning we can suggest some futher analysis that people can do

# Reproducibility

-   [ ] maybe this should go earlier but it would be good to add a section that shows how to reproduce the analysis and the data. But maybe this would duplicate the readme. Here i am just thinking of a step by step guide to reproduce the analysis and the data e.g. clone the repo, run the code for data cleaning then run.....

------------------------------------------------------------------------

# Age

The table below shows weighted descriptive statistics of the sample, and the figure below shows the frequency of respondents at each single year of age.

```{r}
age_statistics %>%
  dplyr::select(contains('wtd')) %>%
  knitr::kable(
             digits = 2,
             col.names = c("Mean",
                           "Median",
                           "Min",
                           "Max",
                           "Standard dev.")) %>%
  kable_styling(full_width = F)

age_range <- max(data$Age) - min(data$Age)
interval <- 1
n_bins <- (age_range / interval) + 1

data %>%
  ggplot(.,aes(Age)) +
  geom_histogram(colour="black",alpha = .7, bins = n_bins) +
  geom_vline(data =age_statistics, aes(xintercept=median), colour="red") +
  scale_x_continuous(breaks = seq(16, 80, 4)) +
  theme_minimal() +
  scale_colour_manual(values=colours, name = "Outsourcing status") +
  scale_fill_manual(values=colours, name = "Outsourcing status") +
  ylab("Count")
  

```

# Gender

The table below shows the weighted gender breakdown of the sample

```{r}
gender_statistics %>%
  dplyr::select(-percentage) %>%
  mutate(across(where(is.numeric), ~ round(.x, 2))) %>%
  dplyr::select(-c(n, N, Sum)) %>%
  kable(col.names = c(
    "Gender",
    "Weighted frequency",
    "Weighted percentage"
  )) %>%
  kable_styling(full_width = F)
```

# Ethnicity {#sec-ethnicity}

The table below shows the weighted ethnicity breakdown using the full range of Census 2021 categories. Note that 'NA' indicates non-responses.

```{r}
ethnicity_statistics %>%
  dplyr::select(-percentage) %>%
  mutate(across(where(is.numeric), ~ round(.x, 2))) %>%
  dplyr::select(-c(n, N, Sum)) %>%
  kable(col.names = c(
    "Ethnicity",
    "Weighted frequency",
    "Weighted percentage"
  )) %>%
  kable_styling(full_width = F)
```

We also make use of an aggregated ethnicity variable that groups ethnicities into fewer categories. The table below shows how the Census categories map onto the aggregated categories.

```{r}
ethnicity_cat <- data %>%
  dplyr::select(contains("ethnicity")) %>%
  distinct() %>%
  arrange(Ethnicity) %>%
  dplyr::select(-c(1:2,Ethnicity_collapsed_disaggregated, Ethnicity_binary))

write_csv(ethnicity_cat, file="../outputs/methodology/data/ethnicity_aggregation_mapping.csv")

ethn_colnames = c(
  "Census categories",
  "Aggregated categories"
)
ethnicity_cat %>%
  kable(col.names = ethn_colnames) %>%
  kable_styling(full_width=FALSE)
```

The table below shows the weighted ethnicity breakdown using the aggregated set of categories

```{r}
ethnicity_statistics_collapsed <- data %>%
  group_by(Ethnicity_collapsed) %>%
  summarise(
    n = n(), # count cases
    Frequency = sum(NatRepemployees) # count weighted cases
  ) %>%
  mutate(
    N = sum(n),
    Sum = sum(Frequency),
    Percentage = 100 * (Frequency / Sum),
    Ethnicity_short = Ethnicity_collapsed
  )

write_csv(ethnicity_statistics_collapsed, file="../outputs/methodology/data/ethnicity_statistics_aggregated.csv")

ethnicity_statistics_collapsed %>%
  mutate(across(where(is.numeric), ~ round(.x, 2))) %>%
  dplyr::select(-c(n, N, Sum, Ethnicity_short)) %>%
  kable(col.names = c(
    "Ethnicity",
    "Weighted frequency",
    "Weighted percentage"
  )) %>%
  kable_styling(full_width = F)
```
